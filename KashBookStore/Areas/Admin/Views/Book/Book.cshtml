@model BookViewModel

@{ 
    //This view is used for add, edit, and delete.
    //Which one is determined by the action method name.
    var action = ViewContext.RouteData.Values["action"].ToString();
    ViewData["Title"] = $" | {action.ToUpper()} Books";
}

<h1>@action.ToUpper() Book</h1>

<form asp-area="Admin" asp-controller="Book" asp-action="@action" method="post">
    <input type="hidden" asp-for="Book.BookID" />

    <div class="form-group row">
        <div class="col-sm-2">
            <label>Title:</label>
        </div>
        @*
            If deleting, display title in a label and put value in hidden field
            for delete message. Otherwise, provide a text box.
        *@
        @if (Operation.IsDelete(action))
        {
            <div class="col-sm-4">
                <label>@Model.Book.Title</label>
            </div>
            <input type="hidden" asp-for="@Model.Book.Title" />
        }
        else
        {
            <div class="col-sm-4">
                <input type="text" asp-for="Book.Title" class="form-control" />
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="Book.Title" class="text-danger"></span>
            </div>
        }
    </div>

    @*If not deleting, display text boxes and drop-downs for rest of fields*@
    @if (!Operation.IsDelete(action))
    {
        <div class="form-group row">
            <div class="col-sm-2">
                <label>Price:</label>
            </div>
            <div class="col-sm-4">
                <input type="text" asp-for="Book.Price" class="form-control" />
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="Book.Price" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-2">
                <label>Genre:</label>
            </div>
            <div class="col-sm-4">
                <select asp-for="Book.GenreID" class="form-control" asp-items='@new SelectList(Model.Genres, "GenreID", "Name", Model.Book.GenreID)'></select>
                (Hold down CTRL or CMD key to select multiple authors)
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="Book.GenreID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-2">
                <label>Authors:</label>
            </div>
            <div class="col-sm-4">
                <select asp-for="SelectedAuthors" class="form-control" asp-items='@new MultiSelectList(Model.Authors, "AuthorID", "FullName", Model.SelectedAuthors)'></select>
            </div>
            <div class="col-sm-6">
                <span asp-validation-for="SelectedAuthors" class="text-danger"></span>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-sm-4 offset-sm-2">
            <button type="submit" class="btn btn-primary">@action.ToUpper()</button>
            @*Return user to main admin page after add, or to the search page otherwise*@
            <a asp-controller="Book" asp-action="@(Operation.IsAdd(action)? "Index": "Search")" class="btn btn-primary">Cancel</a>
        </div>
    </div>
</form>